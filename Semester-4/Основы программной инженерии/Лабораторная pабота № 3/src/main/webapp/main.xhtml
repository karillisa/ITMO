<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:ace="http://www.icesoft.com/icefaces/component"
      xmlns:icecore="http://www.icefaces.org/icefaces/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough">
    <h:head>
        <meta name="viewport" content="initial-scale=1.0" />
        <meta http-equiv="Content-Type" content="text/html" />
        <h:outputStylesheet library="css" name="style.css" />
        <title>web3-main</title>
        <link rel="stylesheet" href="resources/css/style.css"/>

        <img id="it-mo_logo" src="https://itmo.ru/promo/itmo-logo-dark.svg"/>
        <h1 id="lab1">Лабораторная работа №3 Гафурова Фарангиз Фуркатовна P3220 вариант 9</h1>

    </h:head>

    <h:body>
        <div id="allBody">

            <div id = "graff">
                <div id="calculator" style="width: 500px; height: 500px;"></div>
                <script src="https://www.desmos.com/api/v1.8/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6"/>

                <script src="resources/js/graphhJS.js"/>
                <script type="text/javascript">
                    drawFig(#{pointBean.r});
                </script>

                <div>
                    <h:form>
                        <h:commandButton id="return-to-index" value="Info Page"
                                         action="goToPage1"/>
                    </h:form>
                </div>

            </div>


        <div id="bodyA">
            <h:form id = "ker">
                <div>
                    <h:outputText id="outputt" value="X: #{pointBean.x}"/>
                    <h:inputHidden id = "txtInput" value="#{pointBean.x}" />
                    <p:slider widgetVar="sliderWidget" for = "txtInput" id="x" value="#{pointBean.x}"
                              minValue="-4" maxValue="4" step="0.5" display="outputt" style="width: 200px"
                              displayTemplate="X: {value}" onSlideEnd="hand()"/>
                </div>

                <div>
                <h:outputText value="Y:" />
                <p:inputText id="y"  value="#{pointBean.y}" maxlength="6" validatorMessage="Введите число от -5 до 3" required="true" oninput="hand()">
                    <f:validateDoubleRange minimum="-5" maximum="3" />
                </p:inputText>
                </div>



                <script>
                    function hand() {
                        const x = document.getElementById('ker:txtInput').value;
                        const yy = document.getElementById('ker:y').value;

                        const yyy = yy.replace(',', '.');
                        const y = parseFloat(yyy);

                        if (isNaN(x) || isNaN(y)) {
                        } else {
                            calculator.removeExpressions(calculator.getExpressions({type: 'point'}));

                            pointsList.forEach(function(point) {
                                drawPointBasedOnResult(point.x, point.y, point.r, point.result);
                            });

                            drawPointXY(x, y);
                            drawFig(document.getElementById('ker:rValue').value)
                        }
                    }
                </script>

                <div>
                    <script>
                        function drawR() {
                            calculator.removeExpressions(calculator.getExpressions({type: 'point'}));
                            var selectedValue = document.getElementById('ker:rValue').value;
                            drawFig(selectedValue);
                            pointsList.forEach(function(point) {
                                drawPointBasedOnResult(point.x, point.y, point.r, point.result);
                            });
                        }
                    </script>

                    <h:outputText value="R:" />
                    <h:selectOneMenu id="rValue" value="#{pointBean.r}" onchange="drawR()">
                        <f:selectItem itemLabel="1" itemValue="1" />
                        <f:selectItem itemLabel="1.5" itemValue="1.5" />
                        <f:selectItem itemLabel="2" itemValue="2" />
                        <f:selectItem itemLabel="2.5" itemValue="2.5" />
                        <f:selectItem itemLabel="3" itemValue="3" />
                    </h:selectOneMenu>
                </div>

                <div>
                    <h:commandButton value="Send" id="send-button" styleClass="submit-btn">
                        <f:ajax execute="@form" listener="#{resultBean.addResultData(resultBean.getResult(pointBean.x, pointBean.y, pointBean.r))}" render="@form results-table"/>
                    </h:commandButton>
                </div>

                <div>
                    <h:commandButton value="Clear Table" styleClass="clr-btn" id = "cls" class = "cls">
                        <f:ajax execute="@form" listener="#{resultBean.delete}" render="@form results-table"/>
                        <script type="text/javascript">
                            pointsList = []
                            drawR()
                        </script>
                    </h:commandButton>
                </div>



                <script type="text/javascript">
                    function clearPoints() {
                        pointsList = []
                        drawR()
                    }
                </script>

                <div>

                    <h:form id="js-form">


                        <h:commandButton id="js-send-button" value="JS Send" style="display: none;">
                            <f:ajax execute="@form" listener="#{resultBean.addResultData(resultBean.getResult(pointBean.x, pointBean.y, pointBean.r))}" render="@form results-table"/>
                        </h:commandButton>
                    </h:form>

                    <h:form>
                        <script type="text/javascript">
                            pointsList = []
                        </script>
                        <c:forEach var="item" items="#{resultBean.results}">
                            <script type="text/javascript">
                                var newPoint = { x: #{item.x}, y: #{item.y}, r: #{item.r}, result: #{item.result} };
                                pointsList.push(newPoint);
                                drawPointBasedOnResult(#{item.x}, #{item.y}, #{item.r}, #{item.result});
                            </script>
                        </c:forEach>
                    </h:form>

                    <h:form>

                        <p:dataTable id="results-table" value="#{resultBean.results}" var="result"
                                     paginator="true" rows="5" rowsPerPageTemplate="5,10,15,20"
                                     paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}  {RowsPerPageDropdown}"
                                     currentPageReportTemplate="Showing {startRecord} to {endRecord} of {totalRecords} entries">

                            <p:column headerText="id">
                                #{result.id}
                            </p:column>
                            <p:column headerText="X">
                                #{result.x}
                            </p:column>
                            <p:column headerText="Y">
                                #{result.y}
                            </p:column>
                            <p:column headerText="R">
                                #{result.r}
                            </p:column>
                            <p:column headerText="Результат">
                                #{result.result}
                            </p:column>
                            <p:column headerText="Время выполнения">
                                #{result.calculationTime}
                            </p:column>
                            <p:column headerText="Дата и Время">
                                #{result.calculatedAt}
                            </p:column>

                        </p:dataTable>

                    </h:form>
                </div>

            </h:form>

        </div>
        </div>
    </h:body>
    <script src="resources/js/jsEnableClick.js"/>
</html>